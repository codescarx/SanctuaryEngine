#version 430 core

layout (local_size_x = 1, local_size_y = 1) in;

layout (binding = 0, rgba32f) uniform writeonly image2D normalTex;

layout (binding = 0) uniform sampler2D heightmap;

uniform float N;
uniform float amplitude;

void main(void) {
    vec2 uv = gl_GlobalInvocationID.xy / N;

    float texelSize = 1.0 / N;
	
	float z0 = texture(heightmap, uv + vec2(-texelSize,-texelSize)).r;
	float z1 = texture(heightmap, uv + vec2(0,-texelSize)).r;
	float z2 = texture(heightmap, uv + vec2(texelSize,-texelSize)).r;
	float z3 = texture(heightmap, uv + vec2(-texelSize,0)).r;
	float z4 = texture(heightmap, uv + vec2(texelSize,0)).r;
	float z5 = texture(heightmap, uv + vec2(-texelSize,texelSize)).r;
	float z6 = texture(heightmap, uv + vec2(0,texelSize)).r;
	float z7 = texture(heightmap, uv + vec2(texelSize,texelSize)).r;
	 
	vec3 normal = vec3(
        z0 + 2.0*z3 + z5 - z2 - 2.0*z4 - z7,
        z0 + 2.0*z1 + z2 - z5 - 2.0*z6 - z7,
        1.0 / amplitude
    );
	
    imageStore(normalTex, ivec2(gl_GlobalInvocationID), vec4(normalize(normal), 1.0));
}