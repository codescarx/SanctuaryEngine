#version 430 core

layout (local_size_x = 16, local_size_y = 16) in;

layout (binding = 0, rgba32f) readonly uniform image2D butterflyTex;
layout (binding = 1, rgba32f) readonly uniform image2D ping;
layout (binding = 2, rgba32f) writeonly uniform image2D pong;

uniform int stage;
uniform int horiz;

const float PI = 3.14159265358979323846;

#define cplx_mul(a, b) vec2(a.x*b.x-a.y*b.y, a.x*b.y+a.y*b.x)

void horizontal() {
    ivec2 x = ivec2(gl_GlobalInvocationID.xy);

    vec4 data = imageLoad(butterflyTex, ivec2(stage, x.x));
    vec2 p = imageLoad(ping, ivec2(data.z, x.y)).rg;
    vec2 q = imageLoad(ping, ivec2(data.w, x.y)).rg;
    vec2 w = data.xy;

    vec2 h = p + cplx_mul(w, q);

    imageStore(pong, x, vec4(h, 0.0, 1.0));
}

void vertical() {
    ivec2 x = ivec2(gl_GlobalInvocationID.xy);

    vec4 data = imageLoad(butterflyTex, ivec2(stage, x.y));
    vec2 p = imageLoad(ping, ivec2(x.x, data.z)).rg;
    vec2 q = imageLoad(ping, ivec2(x.x, data.w)).rg;
    vec2 w = data.xy;

    vec2 h = p + cplx_mul(w, q);

    imageStore(pong, x, vec4(h, 0.0, 1.0));
}

void main(void) {
    if (horiz == 1) horizontal();
    else vertical();
}